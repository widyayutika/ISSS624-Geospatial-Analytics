---
title: "In-class_Ex5"
author: "Widya Tantiya Yutika"
date: "16 December 2023"
date-modified: "last-modified"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

## Getting Started

Install from github for development version of **spflow** package.

```{r}
devtools::install_github("LukeCe/spflow")
```

Next, I willl load spflow and other R packages in R environment.

```{r}
pacman::p_load(tmap,sf, spdep, sp, Matrix, spflow, reshape2, knitr, tidyverse)
```

## Data Preparation

Before I can calibrate Spatial Econometric Interaction Models by using spflow, three data sets are required:

-   a spatial weights

-   a tibble data.frame consists of the origins, destination, flows and distances between the origins and destination

-   a tibble data.frame consists of the explanatory variables.

## Building the Geographical Area

```{r}
mpsz <- st_read(dsn = "data/geospatial", layer = "MPSZ-2019") %>%
  st_transform(crs = 3414)
```

```{r}
busstop <- st_read(dsn = "data/geospatial", layer = "BusStop") %>%
  st_transform(crs = 3414)
```

```{r}
#centroids <- suppressWarnings({st_point_on_surface(st_geometry(mpsz_busstop))})
```

```{r}
#mpsz_nb <- list(
  #"by_contiguity" = poly2nb(mpsz_busstop),
  #"by_distance" =dnearneigh(centroids, d1=0, d2=5000),
  #"by_knn" = knn2b(knearneigh(centroids,3))
#)
```

## Load all the data

```{r}
mpsz_nb <- read_rds("data/rds/mpsz_nb.rds")
mpsz_flow <- read_rds("data/rds/flow_data.rds")
mpsz_var <- read_rds("data/rds/mpsz_var.rds")
```

```{r}
mpsz_net <- spflow_network(
  id_net="sg",
  node_neighborhood =
    nb2mat(mpsz_nb$by_contiguity),
  node_data=mpsz_var,
  node_key_column ="SZ_CODE")

mpsz_net
```

```{r}
mpsz_net_pairs <- spflow_network_pair(
  id_orig_net ="sg",
  id_dest_net ="sg",
  pair_data =mpsz_flow,
  orig_key_column ="ORIGIN_SZ",
  dest_key_column ="DESTIN_SZ"
)

mpsz_net_pairs
```

```{r}
mpsz_multi_net <- spflow_network_multi(mpsz_net, mpsz_net_pairs)

mpsz_multi_net
```

```{r}
cor_formula <- log(1+TRIPS) ~
  BUSSTOP_COUNT +
  AGE7_12+
  AGE13_24+
  AGE25_64+
  SCHOOL_COUNT+
  BUSINESS_COUNT+
  RETAILS_COUNT+
  FINSERV_COUNT+
  P_(log(DISTANCE+1))
```

```{r}
cor_mat <- pair_cor(
  mpsz_multi_net,
  spflow_formula=cor_formula,
  add_lags_x = FALSE)

colnames(cor_mat) <- paste0(
  substr(
    colnames(cor_mat),1,3),"...")

  cor_image(cor_mat)
```

## The base model

Let us calibrate a base model with the following configuration:

```{r}
base_model <- spflow(
  spflow_formula = log(1+TRIPS) ~
    O_(BUSSTOP_COUNT+
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT+
         RETAILS_COUNT+
         FINSERV_COUNT)+
         P_(log(DISTANCE+1)),
       spflow_networks =mpsz_multi_net)
base_model
```

```{r}
old_par <- par(mfrow=c(1,3),
               mar=c(2,2,2,2))
spflow_moran_plots(base_model)
```

```{r}
par(old_par)

corr_residual <- pair_cor(base_model)
colnames(corr_residual) <- substr(colnames(corr_residual),1,3)
cor_image(corr_residual)
```

```{r}
spflow_formula <- log(1+TRIPS) ~
  O_(BUSSTOP_COUNT+
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT+
         RETAILS_COUNT+
         FINSERV_COUNT)+
  P_(log(DISTANCE+1))

model_control <- spflow_control(estimation_method ="mle", model="model_8")

mle_model8 <- spflow(
  spflow_formula, 
  spflow_networks =mpsz_multi_net, 
  estimation_control=model_control)

mle_model8
```

```{r}
spflow_formula <- log(1+TRIPS) ~
  O_(BUSSTOP_COUNT+
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT+
         RETAILS_COUNT+
         FINSERV_COUNT)+
  P_(log(DISTANCE+1))

model_control <- spflow_control(estimation_method ="mle", model="model_2")

mle_model2 <- spflow(
  spflow_formula, 
  spflow_networks =mpsz_multi_net, 
  estimation_control=model_control)

mle_model2
```

```{r}
spflow_formula <- log(1+TRIPS) ~
  O_(BUSSTOP_COUNT+
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT+
         RETAILS_COUNT+
         FINSERV_COUNT)+
  P_(log(DISTANCE+1))

model_control <- spflow_control(estimation_method ="mle", model="model_1")

mle_model1 <- spflow(
  spflow_formula, 
  spflow_networks =mpsz_multi_net, 
  estimation_control=model_control)

mle_model1
```
